stages:
  - build

  # Template for docker-in-docker jobs, requires special runner with 'dind' tag
.dind: &dind_template
  image: docker:git
  stage: build
  tags:
    - docker
  services:
    - name: docker:dind

# For non-tagged commits, manually build the image with the commit hash
build:manual:
  <<: *dind_template
  when: manual

  variables:
    utenteNuget: "$CI_NUGET_USER"
    passwordNuget: "$CI_NUGET_ACCESS_TOKEN"
    repoNuget: "${CI_API_V4_URL}/groups/3/-/packages/nuget/index.json"

  before_script:   
    - echo registry "$CI_REGISTRY_STAGING" and image "$CI_REGISTRY_STAGING"
    - echo utenteNuget="$utenteNuget" passwordNuget="$passwordNuget" repo="$repoNuget" 
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY_STAGING
  # Use ${CI_COMMIT_SHORT_SHA} if you want to use shortend commit hashs
  script:   
    - docker build --build-arg "buildConfig=Release" --build-arg "repoNuget=$repoNuget" --build-arg "utenteNuget=$utenteNuget" --build-arg "passwordNuget=$passwordNuget" --pull -t "$CI_REGISTRY_IMAGE_STAGING:${CI_COMMIT_SHA}" -f ./mediaenginedistribution/Dockerfile . 
    - docker push "$CI_REGISTRY_IMAGE_STAGING:${CI_COMMIT_SHA}"

# For tagged commits, automatically build a tagged image.
build:tagProd:
  <<: *dind_template
  only: 
    variables:
      - $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ "/production_.*/" || $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ "/release_.*/"
  
  variables:
    registry: "$CI_REGISTRY_PRODUCTION"
    image: "$CI_REGISTRY_PRODUCTION"          # at the job level.
    buildConfig: "Release" 
    utenteNuget: "$CI_NUGET_USER"
    passwordNuget: "$CI_NUGET_ACCESS_TOKEN"
    repoNuget: "${CI_API_V4_URL}/groups/3/-/packages/nuget/index.json"

  before_script:   
    - echo registry "$registry" and image "$image" - buildconfig "$buildConfig"
    - echo utenteNuget="$utenteNuget" passwordNuget="$passwordNuget" repo="$repoNuget" 
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $registry
  script:
    - docker build --build-arg "buildConfig=$buildConfig" --build-arg "repoNuget=$repoNuget" --build-arg "utenteNuget=$utenteNuget" --build-arg "passwordNuget=$passwordNuget" --pull -t "$image:${CI_COMMIT_TAG}" -f ./mediaenginedistribution/Dockerfile . 
    - docker push "$image:${CI_COMMIT_TAG}" 


build:tagTest:
  <<: *dind_template
  only: 
    variables:
      - $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ "/staging_.*/"
  
  variables:
    registry: "$CI_REGISTRY_STAGING"
    image: "$CI_REGISTRY_STAGING"
    buildConfig: "Release"
    utenteNuget: "$CI_NUGET_USER"
    passwordNuget: "$CI_NUGET_ACCESS_TOKEN"
    repoNuget: "${CI_API_V4_URL}/groups/3/-/packages/nuget/index.json"
    
  before_script:   
    - echo registry "$registry" and image "$image" - buildconfig "$buildConfig"
    - echo utenteNuget="$utenteNuget" passwordNuget="$passwordNuget" repo="$repoNuget" 
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $registry
  script:
    - docker build --build-arg "buildConfig=$buildConfig" --build-arg "repoNuget=$repoNuget" --build-arg "utenteNuget=$utenteNuget" --build-arg "passwordNuget=$passwordNuget" --pull -t "$image:${CI_COMMIT_TAG}" -f ./mediaenginedistribution/Dockerfile . 
    - docker push "$image:${CI_COMMIT_TAG}" 
