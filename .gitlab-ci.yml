stages:
  - build

.dind: &dind_template
  image: docker:git
  stage: build
  tags:
    - docker
  services:
    - name: docker:dind
      alias: docker
      command: ["--tls=false"]

build:
  <<: *dind_template

  variables:
    # using "docker" as the host is only possible if you alias the service below
    DOCKER_HOST: tcp://docker:2375 
    # could be wrong here but although Docker defaults to overlay2, 
    # Docker-in-Docker (DIND) does not according to the following GitLab doc: 
    # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-the-overlayfs-driver
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""

  # only: 
  #   variables:
  #     - $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ "/production_.*/" || $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ "/release_.*/"
  
  # variables:
  #   registry: "$CI_REGISTRY_PRODUCTION"
  #   image: "$CI_REGISTRY_PRODUCTION"          # at the job level.
  #   buildConfig: "Release" 
  #   utenteNuget: "$CI_NUGET_USER"
  #   passwordNuget: "$CI_NUGET_ACCESS_TOKEN"
  #   repoNuget: "${CI_API_V4_URL}/groups/3/-/packages/nuget/index.json"

  # before_script:   
  #   - echo registry "$registry" and image "$image" - buildconfig "$buildConfig"
  #   - echo utenteNuget="$utenteNuget" passwordNuget="$passwordNuget" repo="$repoNuget" 
  #   - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $registry
  # script:
  #   - docker build --build-arg "buildConfig=$buildConfig" --build-arg "repoNuget=$repoNuget" --build-arg "utenteNuget=$utenteNuget" --build-arg "passwordNuget=$passwordNuget" --pull -t "$image:${CI_COMMIT_TAG}" -f ./mediaenginedistribution/Dockerfile . 
  #   - docker push "$image:${CI_COMMIT_TAG}" 
  script:
    - docker --version
    - docker build -t cutterservice:latest -f ./src/cutterservice/Dockerfile . 