stages:
  - test
  - build
  - deploy

.dotnet: &dotnet_template
  image: mcr.microsoft.com/dotnet/sdk:7.0
  tags:
    - docker

test_hammerservice:
  <<: *dotnet_template
  stage: test
  script:   
    - dotnet test ./src/hammerservice

.goland: &goland_template
  image: golang
  tags:
    - docker

test_cutterservice:
  <<: *goland_template
  stage: test
  script:
    - go install gotest.tools/gotestsum@latest
    - cd ./src/cutterservice
    - gotestsum --junitfile report.xml --format testname 

.dind: &dind_template
  image: docker:git
  variables:
    DOCKER_HOST: tcp://docker:2375 
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  tags:
    - docker
  services:
    - name: docker:dind
      alias: docker
      command: ["--tls=false"]

build_hammerservice:
  <<: *dind_template
  stage: build
  only: 
    changes:
      - src/hammerservice/**/*  
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
<<<<<<< Updated upstream
    - docker build -t "$CI_REGISTRY_IMAGE_HAMMERSERVICE:0.1" -f ./src/hammerservice/hammerservice/Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE_HAMMERSERVICE:0.1"
=======
    - docker build -t "$CI_REGISTRY_IMAGE_HAMMERSERVICE:0.2" -f ./src/hammerservice/hammerservice/Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE_HAMMERSERVICE:0.2"

build_cutterservice:
  <<: *dind_template
  stage: build
  only: 
    changes:
      - src/cutterservice/**/*  
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker --version
    - docker build -t "$CI_REGISTRY_IMAGE_CUTTERSERVICE:0.2" -f ./src/cutterservice/Dockerfile ./src/cutterservice
    - docker push "$CI_REGISTRY_IMAGE_CUTTERSERVICE:0.2"
>>>>>>> Stashed changes
